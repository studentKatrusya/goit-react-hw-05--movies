{"version":3,"file":"static/js/697.2ade32f4.chunk.js","mappings":"kOACaA,EAAOC,EAAAA,EAAAA,GAAH,6NAGb,IASSC,EAAOD,EAAAA,EAAAA,GAAH,gQACb,I,6BCVW,SAASE,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MAEf,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUN,EAAOO,IAAIC,MAAK,SAAAL,GAAM,OAAIC,EAAUD,QAC7C,CAACH,EAAOO,MAGT,8BACGJ,IAC4B,IAA1BA,EAAOM,QAAQC,QACd,SAACd,EAAD,UACGO,EAAOM,QAAQE,KAAI,SAAAC,GAAK,OACvB,UAACd,EAAD,YACE,0BACE,wCADF,IAC4Bc,EAAMC,WAGlC,0BACE,yCADF,IAC6BD,EAAME,aAN1BF,EAAML,UAYrB,2E,0MC9BVQ,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,sGAGfD,IAAAA,IAAA,yEAHe,uBAEfN,EAFe,EAEvBQ,KAAQR,QAFe,kBAKlBA,GALkB,2CAAH,qDAQXS,EAAQ,mCAAG,WAAMX,GAAN,yFACCQ,IAAAA,IAAA,iBAAoBR,EAApB,gDADD,uBACdU,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,sDAMRE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBL,IAAAA,IAAA,uEAA0EK,EAA1E,OAHkB,uBAElBX,EAFkB,EAE1BQ,KAAQR,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdH,EAAS,mCAAG,WAAMC,GAAN,yFACAQ,IAAAA,IAAA,iBAAoBR,EAApB,uEADA,uBACfU,EADe,EACfA,KADe,kBAGhBA,GAHgB,2CAAH,sDAMTI,EAAO,mCAAG,WAAMd,GAAN,yFACEQ,IAAAA,IAAA,iBAAoBR,EAApB,uEADF,uBACbU,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH","sources":["components/Reviews.styled.jsx","components/Reviews.jsx","services/apiService.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  ${'' /* grid-template-columns: repeat(auto-fill, minmax(320px, 1fr)); */}\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: 30px;\n  margin-right: 30px;\n`;\nexport const Item = styled.li`\n  ${'' /* text-align: center; */}\n  font-size: 16px;\n   font-family:Verdana, Geneva, Tahoma, sans-serif\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useParams } from 'react-router-dom';\nimport { List, Item } from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { getReview } from 'services/apiService';\nexport default function Reviews() {\n  const params = useParams();\n\n  const [rewiev, setRewiev] = useState(null);\n\n  //   useEffect(() => {\n  //     FetchApi.fetchRewiev(id).then(setRewiev);\n  //   }, []);\n  useEffect(() => {\n    getReview(params.id).then(rewiev => setRewiev(rewiev));\n  }, [params.id]);\n\n  return (\n    <>\n      {rewiev &&\n        (rewiev.results.length !== 0 ? (\n          <List>\n            {rewiev.results.map(actor => (\n              <Item key={actor.id}>\n                <p>\n                  <strong>author:</strong> {actor.author}\n                </p>\n\n                <p>\n                  <strong>content:</strong> {actor.content}\n                </p>\n              </Item>\n            ))}\n          </List>\n        ) : (\n          <h2> We don't have any rewievs for this movie</h2>\n        ))}\n    </>\n  );\n}\n","import axios from 'axios';\n// https://api.themoviedb.org/3/movie/76341?api_key=<<api_key>>\n// 4867f71c2cc3334fef3a71f8c4706576\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc`);\n  return results;\n};\n\nexport const getMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=b2e625c7bfa1b5b54460e1c069c61bdc&query=${query}\n`);\n  return results;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=\nb2e625c7bfa1b5b54460e1c069c61bdc&language=en-US`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=\n4867f71c2cc3334fef3a71f8c4706576&language=en-US`);\n  return data;\n};\n"],"names":["List","styled","Item","Reviews","params","useParams","useState","rewiev","setRewiev","useEffect","getReview","id","then","results","length","map","actor","author","content","axios","getTranding","data","getMovie","getSearchMovie","query","getCast"],"sourceRoot":""}